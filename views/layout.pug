doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(name='theme-color' content='#4DA5F4')
    meta(name='csrf-token', content=_csrf)
    title #{title} - Hackathon Starter
    link(rel='shortcut icon', href='/favicon.png')
    link(rel='stylesheet', href='/css/main.css')
    link(rel='stylesheet', href='/css/style.css')
    block head

  body
    include partials/header

    .container
      //- include partials/flash
      block content

    include partials/footer

    script(src='/js/lib/jquery.min.js')
    script(src='/js/lib/popper.min.js')
    script(src='/js/lib/bootstrap.min.js')
    script(src='/js/main.js')

    script.
      let bigdawgsAPIurl = "#{process.env.API_URL}";
      
      $(".order-form fieldset:first-child").fadeIn("slow");

      $('.order-form input[type="text"], .order-form input[type="password"], .order-form textarea').on("focus", function() {
        $(this).removeClass("input-error");
      });

      // next step
      $(".btn-next").on("click", function(e) {
        e.preventDefault();
        let parent_fieldset = $(this).parents("fieldset");
        let next_step = true;
        
        parent_fieldset
          .find('input[type="text"], input[type="password"], input[type="file"], textarea')
          .each(function() {
            if ($(this).val() == "") {
              $(this).addClass("input-error");
              next_step = false;
            } else {
              $(this).removeClass("input-error");
            }
          });

        if (next_step) {
          parent_fieldset.fadeOut(400, function() {
            $(this)
              .next()
              .fadeIn();
          });
        }
      });

      // previous step
      $(".order-form .btn-previous").on("click", function() {
        $(this)
          .parents("fieldset")
          .fadeOut(400, function() {
            $(this)
              .prev()
              .fadeIn();
          });
      });

      // submit
      $(".btn-vid-card").on("click", function(e) {
        e.preventDefault();
        let form = $('.order-form');
        let imgAPIUrl = bigdawgsAPIurl + "/image";
        let vidAPIUrl = bigdawgsAPIurl + "/video";
        let fData = $(this).serialize();

        let formData = new FormData(form[0]);


        postAjax(imgAPIUrl, formData)
          .then(data => {
            //- add to cart
            console.log(data);

            formData.delete("template_bg");
            formData.set("greeting_card_id", data.greetingCardID);

            postAjax(vidAPIUrl, formData)
              .then(video => {
                console.log(video);
              })
              .catch(err => {
                console.log(err)
              });
          })
          .catch(err => {
            //- error message
            console.log(err);
          })

        
      });

      function getAjax(url) {
        return new Promise(function(resolve, reject) {
          let xhr = new XMLHttpRequest();
          xhr.open("GET", url);
          xhr.onload = function() {
            if (this.status >= 200 && this.status < 300) {
              let response = JSON.parse(xhr.response);
              resolve(response);
            } else {
              reject({ status: this.status, statusText: xhr.statusText });
            }
          };
          xhr.onerror = function() {
            reject({ status: this.status, statusText: xhr.statusText });
          };
          xhr.send();
        });
      }


      function postAjax(url, data) {
       return new Promise((resolve, reject) => {

        let xhr = new XMLHttpRequest();
        xhr.open("POST", url);
        xhr.onload = function() {
          if (this.status === 201) {
            let response = JSON.parse(xhr.response);
            resolve(response);
          } else {
            reject({ status: this.status, statusText: xhr.statusText });
          }
        };
        xhr.onerror = function() {
          reject({ status: this.status, statusText: xhr.statusText });
        };

        xhr.send(data);
       });
      }
      
