script(src='/js/lib/jquery.min.js')
script(src='/js/lib/popper.min.js')
script(src='/js/lib/bootstrap.min.js')
link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.4/croppie.min.css')
script(src='https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.4/croppie.min.js')

script.
  let $uploadCrop;

  function readFile(input) {
    if (input.files && input.files[0]) {
      let reader = new FileReader();
      let product_id =  $('.product_id').val();
      let imgAPIUrl = bigdawgsAPIurl + "/image";

      reader.onload = function(e) {

        $uploadCrop.addClass('ready');
        $uploadCrop.croppie('bind', {
          url: e.target.result
        }).then(function() {
          console.log('binded');
        })
        $("#temp_bg").hide();
        $('.crop-btn').removeClass('hidden');
        $('.crop-btn').on('click', function(e) {
          e.preventDefault();
          $uploadCrop.croppie('result', {
            type: 'base64',
            size: 'viewport'
          }).then(dataImg => {
            $('.crop-area-wrap').hide();
            $('.crop-btn').hide();
            var canvasImg = document.createElement('img');
            canvasImg.setAttribute('src', dataImg);
            $('.crop-area-wrap').after(canvasImg);
            
            let imgFormData = new FormData();

            imgFormData.append('imageID', input.files[0].name)
            imgFormData.append('imageB64', dataImg);
            imgFormData.append('product_id',product_id);
            
            postAjax(imgAPIUrl, imgFormData)
              .then((image, err, prog) => {
                console.log(prog);
                localStorage.setItem('greetingCardID', image.greetingCardID);
                $('.btn-next').removeClass('hidden');
              })
              .catch(err => {
                //- error message
                console.log(err);
              })
          })
          
        })
      }
      reader.readAsDataURL(input.files[0]);
    }
  }

  $uploadCrop = $('.crop-area').croppie({
    viewport: { 
      width: 300, 
      height: 300,
    },
    enableExif: true
  });


  $("#temp_bg").change(function() {
    readFile(this);
  });
  


  
script.
  let bigdawgsAPIurl = "#{process.env.API_URL}";
  
  $(".order-form fieldset:first-child").fadeIn("slow");

  $('.order-form input[type="text"], .order-form input[type="password"], .order-form textarea').on("focus", function() {
    $(this).removeClass("input-error");
  });

  // next step
  $(".btn-next").on("click", function(e) {
    e.preventDefault();
    let parent_fieldset = $(this).parents("fieldset");
    let next_step = true;

    parent_fieldset
      .find('input[type="text"], input[type="password"], input[type="file"], textarea')
      .each(function() {
        if ($(this).val() == "") {
          $(this).addClass("input-error");
          next_step = false;
        } else {
          $(this).removeClass("input-error");
        }
      });

    if (next_step) {
      parent_fieldset.fadeOut(400, function() {
        $(this)
          .next()
          .fadeIn();
      });
    }
    $("#progress").value = 0;
    $("#display").innerText = '0%';
    $("#progress").removeClass("hide");
    $("#display").removeClass("hide");
  });

  // previous step
  $(".order-form .btn-previous").on("click", function() {
    $(this)
      .parents("fieldset")
      .fadeOut(400, function() {
        $(this)
          .prev()
          .fadeIn();
      });
  });

  // submit
  $(".btn-vid-card").on("click", function(e) {
    e.preventDefault();
    let form = $('.order-form');
    let imgAPIUrl = bigdawgsAPIurl + "/image";
    let vidAPIUrl = bigdawgsAPIurl + "/video";
    let fData = $(this).serialize();
    let formData = new FormData(form[0]);

    formData.set("greeting_card_id", localStorage.getItem('greetingCardID'));

    postAjax(vidAPIUrl, formData)
      .then(video => {
        console.log(video);

        let vidplayer = document.createElement('video');
        let source = document.createElement('source');
        let sourceWEBM = document.createElement('source');
        let sourceOGV = document.createElement('source');

        vidplayer.preload = "none";
        vidplayer.poster = video.videoUrl.url.split('.').slice(0, -1).join('.') + ".jpg";
        vidplayer.controls = "controls";

        //- original format
        source.src = video.videoUrl.url;
        source.type = "video/" + video.format + "; codecs=hvc1";


        //- webm
        sourceWEBM.src = video.videoUrl.url.split('.').slice(0, -1).join('.') + ".webm";
        sourceWEBM.type ="video/webm; codecs=vp9";

        //- ogg
        sourceOGV.src = video.videoUrl.url.split('.').slice(0, -1).join('.') + ".ogv";
        sourceOGV.type ="video/ogg";

        vidplayer.append(source);
        vidplayer.append(sourceWEBM);
        vidplayer.append(sourceOGV);
        
        setTimeout($('#uploaded-video').append(vidplayer), 5000);

        localStorage.clear();
      })
      .catch(err => {
        console.log(err)
      });

    
  });

  $(".btn-greeting-card").on("click", function(e) {
    e.preventDefault();
    let form = $('.order-form');
    let soundAPIUrl = bigdawgsAPIurl + "/sound";
    let fData = $(this).serialize();

    let formData = new FormData(form[0]);

    formData.set("greeting_card_id", localStorage.getItem('greetingCardID'));

    postAjax(soundAPIUrl, formData)
      .then(sound => {
        console.log(sound);

        let audioplayer = document.createElement('audio');
        let source = document.createElement('source');
        let sourceOGG = document.createElement('source');

        audioplayer.controls = "controls";

        //- original format
        source.src = sound.soundUrl.url;
        source.format = "audio/" + sound.format;

        //- ogg
        sourceOGG.src = sound.soundUrl.url.split('.').slice(0, -1).join('.') + ".ogg";
        sourceOGG.type ="audio/ogg";

        audioplayer.append(source);
        audioplayer.append(sourceOGG);

        $('#uploaded-audio').append(audioplayer);

        localStorage.clear();
      })
      .catch(err => {
        console.log(err)
      });
    
  });

  //http://yourproducturl.com/checkout/?add-to-cart=%ID%

  function getAjax(url) {
    return new Promise(function(resolve, reject) {
      let xhr = new XMLHttpRequest();
      xhr.open("GET", url);
      xhr.onload = function() {
        if (this.status >= 200 && this.status < 300) {
          let response = JSON.parse(xhr.response);
          resolve(response);
        } else {
          reject({ status: this.status, statusText: xhr.statusText });
        }
      };
      xhr.onerror = function() {
        reject({ status: this.status, statusText: xhr.statusText });
      };
      xhr.send();
    });
  }


  function postAjax(url, data) {
    return new Promise((resolve, reject) => {

      //- $.ajax({
      //-   xhr: function() {
      //-     var xhr = new window.XMLHttpRequest();

      //-     //Upload progress
      //-     xhr.upload.addEventListener("progress", function(evt){
      //-       if (evt.lengthComputable) {
      //-         var percentComplete = evt.loaded / evt.total;
      //-         //Do something with upload progress
      //-         console.log(percentComplete);
      //-         $('.progress').css({
      //-           width: percentComplete * 100 + '%'
      //-         });
      //-         if (percentComplete === 1) {
      //-             $('.progress').addClass('hide');
      //-         }
      //-       }
      //-     }, false);
      //-     //Download progress
      //-     xhr.addEventListener("progress", function(evt){
      //-       if (evt.lengthComputable) {
      //-         var percentComplete = evt.loaded / evt.total;
      //-         //Do something with download progress
      //-         console.log(percentComplete);
      //-         $('.progress').css({
      //-           width: percentComplete * 100 + '%'
      //-         });
      //-       }
      //-     }, false);
      //-     return xhr;
      //-   },
      //-   type: 'POST',
      //-   url: url,
      //-   data: data,
      //-   processData: false,
      //-   contentType: false,
      //-   success: function(res) {
      //-     resolve(res);
      //-   },
      //-   error: function(err) {
      //-     reject({ status: this.status, statusText: err.statusText })
      //-   }
      //- })

      let xhr = new XMLHttpRequest();

      xhr.open("POST", url);

      xhr.onload = function(e) {
        if (this.status === 201) {
          $("i.fa-spinner").addClass("hide");

          let response = JSON.parse(xhr.response);
          resolve(response);
        } else {
          reject({ status: this.status, statusText: xhr.statusText });
        }
      };
      
      xhr.upload.addEventListener("progress", function(evt){
        if (evt.lengthComputable) {
          var percentComplete = evt.loaded / evt.total;
          //Do something with upload progress
          console.log(percentComplete);
          $('.progress').css({
            width: percentComplete * 100 + '%'
          });
          if (percentComplete === 1) {
              $('.progress').addClass('hide');
          }
        }
      }, false);
      
      //Download progress
      xhr.addEventListener("progress", function(evt){
        if (evt.lengthComputable) {
          var percentComplete = evt.loaded / evt.total;
          //Do something with download progress
          console.log(percentComplete);
          $('.progress').css({
            width: percentComplete * 100 + '%'
          });
        }
      }, false);

      xhr.onerror = function() {
        reject({ status: this.status, statusText: xhr.statusText });
      };

      xhr.send(data);
    });
  }